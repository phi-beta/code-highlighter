// Generated from src\grammars\antlr\MarkdownMini.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class MarkdownMini extends Lexer {
	public static readonly HEADING_ATX = 1;
	public static readonly HR = 2;
	public static readonly BLOCKQUOTE = 3;
	public static readonly LIST_BULLET = 4;
	public static readonly LIST_ENUM = 5;
	public static readonly CODE_FENCE_START = 6;
	public static readonly IMAGE = 7;
	public static readonly LINK = 8;
	public static readonly INLINE_CODE = 9;
	public static readonly BOLDITALIC = 10;
	public static readonly BOLD = 11;
	public static readonly ITALIC = 12;
	public static readonly STRIKETHROUGH = 13;
	public static readonly HTML_TAG = 14;
	public static readonly ESCAPED_CHAR = 15;
	public static readonly COMMENT = 16;
	public static readonly TEXT = 17;
	public static readonly NEWLINE = 18;
	public static readonly WS = 19;
	public static readonly CODE_FENCE_END = 20;
	public static readonly CODE_TEXT = 21;
	public static readonly CODE = 1;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "CODE",
	];

	public static readonly ruleNames: string[] = [
		"HEADING_ATX", "ATX_START", "ATX_TEXT", "HR", "BLOCKQUOTE", "LIST_BULLET", 
		"LIST_ENUM", "DIGITS", "CODE_FENCE_START", "IMAGE", "LINK", "INLINE_CODE", 
		"BOLDITALIC", "BOLD", "ITALIC", "STRIKETHROUGH", "HTML_TAG", "ESCAPED_CHAR", 
		"COMMENT", "TEXT", "NEWLINE", "WS", "CODE_FENCE_END", "CODE_TEXT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "HEADING_ATX", "HR", "BLOCKQUOTE", "LIST_BULLET", "LIST_ENUM", 
		"CODE_FENCE_START", "IMAGE", "LINK", "INLINE_CODE", "BOLDITALIC", "BOLD", 
		"ITALIC", "STRIKETHROUGH", "HTML_TAG", "ESCAPED_CHAR", "COMMENT", "TEXT", 
		"NEWLINE", "WS", "CODE_FENCE_END", "CODE_TEXT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(MarkdownMini._LITERAL_NAMES, MarkdownMini._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return MarkdownMini.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(MarkdownMini._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "MarkdownMini.g4"; }

	// @Override
	public get ruleNames(): string[] { return MarkdownMini.ruleNames; }

	// @Override
	public get serializedATN(): string { return MarkdownMini._serializedATN; }

	// @Override
	public get channelNames(): string[] { return MarkdownMini.channelNames; }

	// @Override
	public get modeNames(): string[] { return MarkdownMini.modeNames; }

	// @Override
	public sempred(_localctx: RuleContext, ruleIndex: number, predIndex: number): boolean {
		switch (ruleIndex) {
		case 0:
			return this.HEADING_ATX_sempred(_localctx, predIndex);
		}
		return true;
	}
	private HEADING_ATX_sempred(_localctx: RuleContext, predIndex: number): boolean {
		switch (predIndex) {
		case 0:
			return this.text.charAt(0) == '#';
		}
		return true;
	}

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x17\u0158\b\x01" +
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04" +
		"\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x03\x02\x03\x02\x05\x027\n\x02" +
		"\x03\x02\x05\x02:\n\x02\x03\x02\x03\x02\x03\x03\x03\x03\x07\x03@\n\x03" +
		"\f\x03\x0E\x03C\v\x03\x03\x03\x06\x03F\n\x03\r\x03\x0E\x03G\x03\x04\x07" +
		"\x04K\n\x04\f\x04\x0E\x04N\v\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05" +
		"\x03\x05\x03\x05\x03\x05\x03\x05\x05\x05Y\n\x05\x03\x05\x07\x05\\\n\x05" +
		"\f\x05\x0E\x05_\v\x05\x03\x05\x03\x05\x03\x06\x03\x06\x05\x06e\n\x06\x03" +
		"\x06\x07\x06h\n\x06\f\x06\x0E\x06k\v\x06\x03\x06\x05\x06n\n\x06\x03\x07" +
		"\x03\x07\x06\x07r\n\x07\r\x07\x0E\x07s\x03\x07\x07\x07w\n\x07\f\x07\x0E" +
		"\x07z\v\x07\x03\x07\x05\x07}\n\x07\x03\b\x03\b\x03\b\x06\b\x82\n\b\r\b" +
		"\x0E\b\x83\x03\b\x07\b\x87\n\b\f\b\x0E\b\x8A\v\b\x03\b\x05\b\x8D\n\b\x03" +
		"\t\x06\t\x90\n\t\r\t\x0E\t\x91\x03\n\x03\n\x03\n\x03\n\x03\n\x07\n\x99" +
		"\n\n\f\n\x0E\n\x9C\v\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v" +
		"\x07\v\xA6\n\v\f\v\x0E\v\xA9\v\v\x03\v\x03\v\x03\v\x06\v\xAE\n\v\r\v\x0E" +
		"\v\xAF\x03\v\x03\v\x03\f\x03\f\x07\f\xB6\n\f\f\f\x0E\f\xB9\v\f\x03\f\x03" +
		"\f\x03\f\x06\f\xBE\n\f\r\f\x0E\f\xBF\x03\f\x03\f\x03\r\x03\r\x06\r\xC6" +
		"\n\r\r\r\x0E\r\xC7\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x06\x0E\xD1\n\x0E\r\x0E\x0E\x0E\xD2\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x06\x0E\xDD\n\x0E\r\x0E\x0E\x0E\xDE\x03\x0E" +
		"\x03\x0E\x03\x0E\x05\x0E\xE4\n\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x06\x0F\xEC\n\x0F\r\x0F\x0E\x0F\xED\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x06\x0F\xF8\n\x0F\r\x0F\x0E\x0F" +
		"\xF9\x03\x0F\x03\x0F\x05\x0F\xFE\n\x0F\x03\x10\x03\x10\x06\x10\u0102\n" +
		"\x10\r\x10\x0E\x10\u0103\x03\x10\x03\x10\x03\x10\x06\x10\u0109\n\x10\r" +
		"\x10\x0E\x10\u010A\x03\x10\x05\x10\u010E\n\x10\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x06\x11\u0114\n\x11\r\x11\x0E\x11\u0115\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x07\x12\u011D\n\x12\f\x12\x0E\x12\u0120\v\x12\x03\x12" +
		"\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x03\x14\x07\x14\u012D\n\x14\f\x14\x0E\x14\u0130\v\x14\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x15\x06\x15\u0137\n\x15\r\x15\x0E\x15\u0138\x03\x16" +
		"\x05\x16\u013C\n\x16\x03\x16\x03\x16\x03\x17\x06\x17\u0141\n\x17\r\x17" +
		"\x0E\x17\u0142\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x05\x18\u014C\n\x18\x03\x18\x03\x18\x03\x19\x06\x19\u0151\n\x19\r\x19" +
		"\x0E\x19\u0152\x03\x19\x03\x19\x05\x19\u0157\n\x19\x04\u012E\u0152\x02" +
		"\x02\x1A\x04\x02\x03\x06\x02\x02\b\x02\x02\n\x02\x04\f\x02\x05\x0E\x02" +
		"\x06\x10\x02\x07\x12\x02\x02\x14\x02\b\x16\x02\t\x18\x02\n\x1A\x02\v\x1C" +
		"\x02\f\x1E\x02\r \x02\x0E\"\x02\x0F$\x02\x10&\x02\x11(\x02\x12*\x02\x13" +
		",\x02\x14.\x02\x150\x02\x162\x02\x17\x04\x02\x03\x10\x04\x02\f\f\x0F\x0F" +
		"\x04\x02\v\v\"\"\x04\x02,-//\x03\x022;\x05\x02\f\f\x0F\x0Fbb\x05\x02\f" +
		"\f\x0F\x0F__\x05\x02\f\f\x0F\x0F++\x06\x02\f\f\x0F\x0F)),,\x06\x02\f\f" +
		"\x0F\x0F))aa\x03\x02,,\x03\x02aa\x06\x02\f\f\x0F\x0F))\x80\x80\b\x02\f" +
		"\f\x0F\x0F\"\"))>>@@\x03\x02bb\x02\u017F\x02\x04\x03\x02\x02\x02\x02\n" +
		"\x03\x02\x02\x02\x02\f\x03\x02\x02\x02\x02\x0E\x03\x02\x02\x02\x02\x10" +
		"\x03\x02\x02\x02\x02\x14\x03\x02\x02\x02\x02\x16\x03\x02\x02\x02\x02\x18" +
		"\x03\x02\x02\x02\x02\x1A\x03\x02\x02\x02\x02\x1C\x03\x02\x02\x02\x02\x1E" +
		"\x03\x02\x02\x02\x02 \x03\x02\x02\x02\x02\"\x03\x02\x02\x02\x02$\x03\x02" +
		"\x02\x02\x02&\x03\x02\x02\x02\x02(\x03\x02\x02\x02\x02*\x03\x02\x02\x02" +
		"\x02,\x03\x02\x02\x02\x02.\x03\x02\x02\x02\x030\x03\x02\x02\x02\x032\x03" +
		"\x02\x02\x02\x044\x03\x02\x02\x02\x06=\x03\x02\x02\x02\bL\x03\x02\x02" +
		"\x02\nX\x03\x02\x02\x02\fb\x03\x02\x02\x02\x0Eo\x03\x02\x02\x02\x10~\x03" +
		"\x02\x02\x02\x12\x8F\x03\x02\x02\x02\x14\x93\x03\x02\x02\x02\x16\xA1\x03" +
		"\x02\x02\x02\x18\xB3\x03\x02\x02\x02\x1A\xC3\x03\x02\x02\x02\x1C\xE3\x03" +
		"\x02\x02\x02\x1E\xFD\x03\x02\x02\x02 \u010D\x03\x02\x02\x02\"\u010F\x03" +
		"\x02\x02\x02$\u011A\x03\x02\x02\x02&\u0123\x03\x02\x02\x02(\u0126\x03" +
		"\x02\x02\x02*\u0136\x03\x02\x02\x02,\u013B\x03\x02\x02\x02.\u0140\x03" +
		"\x02\x02\x020\u0146\x03\x02\x02\x022\u0150\x03\x02\x02\x0246\x05\x06\x03" +
		"\x0257\x05\b\x04\x0265\x03\x02\x02\x0267\x03\x02\x02\x0279\x03\x02\x02" +
		"\x028:\x05,\x16\x0298\x03\x02\x02\x029:\x03\x02\x02\x02:;\x03\x02\x02" +
		"\x02;<\x06\x02\x02\x02<\x05\x03\x02\x02\x02=A\x07%\x02\x02>@\x07%\x02" +
		"\x02?>\x03\x02\x02\x02@C\x03\x02\x02\x02A?\x03\x02\x02\x02AB\x03\x02\x02" +
		"\x02BE\x03\x02\x02\x02CA\x03\x02\x02\x02DF\x07\"\x02\x02ED\x03\x02\x02" +
		"\x02FG\x03\x02\x02\x02GE\x03\x02\x02\x02GH\x03\x02\x02\x02H\x07\x03\x02" +
		"\x02\x02IK\n\x02\x02\x02JI\x03\x02\x02\x02KN\x03\x02\x02\x02LJ\x03\x02" +
		"\x02\x02LM\x03\x02\x02\x02M\t\x03\x02\x02\x02NL\x03\x02\x02\x02OP\x07" +
		"/\x02\x02PQ\x07/\x02\x02QY\x07/\x02\x02RS\x07,\x02\x02ST\x07,\x02\x02" +
		"TY\x07,\x02\x02UV\x07a\x02\x02VW\x07a\x02\x02WY\x07a\x02\x02XO\x03\x02" +
		"\x02\x02XR\x03\x02\x02\x02XU\x03\x02\x02\x02Y]\x03\x02\x02\x02Z\\\t\x03" +
		"\x02\x02[Z\x03\x02\x02\x02\\_\x03\x02\x02\x02][\x03\x02\x02\x02]^\x03" +
		"\x02\x02\x02^`\x03\x02\x02\x02_]\x03\x02\x02\x02`a\x05,\x16\x02a\v\x03" +
		"\x02\x02\x02bd\x07@\x02\x02ce\x07\"\x02\x02dc\x03\x02\x02\x02de\x03\x02" +
		"\x02\x02ei\x03\x02\x02\x02fh\n\x02\x02\x02gf\x03\x02\x02\x02hk\x03\x02" +
		"\x02\x02ig\x03\x02\x02\x02ij\x03\x02\x02\x02jm\x03\x02\x02\x02ki\x03\x02" +
		"\x02\x02ln\x05,\x16\x02ml\x03\x02\x02\x02mn\x03\x02\x02\x02n\r\x03\x02" +
		"\x02\x02oq\t\x04\x02\x02pr\x07\"\x02\x02qp\x03\x02\x02\x02rs\x03\x02\x02" +
		"\x02sq\x03\x02\x02\x02st\x03\x02\x02\x02tx\x03\x02\x02\x02uw\n\x02\x02" +
		"\x02vu\x03\x02\x02\x02wz\x03\x02\x02\x02xv\x03\x02\x02\x02xy\x03\x02\x02" +
		"\x02y|\x03\x02\x02\x02zx\x03\x02\x02\x02{}\x05,\x16\x02|{\x03\x02\x02" +
		"\x02|}\x03\x02\x02\x02}\x0F\x03\x02\x02\x02~\x7F\x05\x12\t\x02\x7F\x81" +
		"\x070\x02\x02\x80\x82\x07\"\x02\x02\x81\x80\x03\x02\x02\x02\x82\x83\x03" +
		"\x02\x02\x02\x83\x81\x03\x02\x02\x02\x83\x84\x03\x02\x02\x02\x84\x88\x03" +
		"\x02\x02\x02\x85\x87\n\x02\x02\x02\x86\x85\x03\x02\x02\x02\x87\x8A\x03" +
		"\x02\x02\x02\x88\x86\x03\x02\x02\x02\x88\x89\x03\x02\x02\x02\x89\x8C\x03" +
		"\x02\x02\x02\x8A\x88\x03\x02\x02\x02\x8B\x8D\x05,\x16\x02\x8C\x8B\x03" +
		"\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x11\x03\x02\x02\x02\x8E\x90\t" +
		"\x05\x02\x02\x8F\x8E\x03\x02\x02\x02\x90\x91\x03\x02\x02\x02\x91\x8F\x03" +
		"\x02\x02\x02\x91\x92\x03\x02\x02\x02\x92\x13\x03\x02\x02\x02\x93\x94\x07" +
		"b\x02\x02\x94\x95\x07b\x02\x02\x95\x96\x07b\x02\x02\x96\x9A\x03\x02\x02" +
		"\x02\x97\x99\n\x06\x02\x02\x98\x97\x03\x02\x02\x02\x99\x9C\x03\x02\x02" +
		"\x02\x9A\x98\x03\x02\x02\x02\x9A\x9B\x03\x02\x02\x02\x9B\x9D\x03\x02\x02" +
		"\x02\x9C\x9A\x03\x02\x02\x02\x9D\x9E\x05,\x16\x02\x9E\x9F\x03\x02\x02" +
		"\x02\x9F\xA0\b\n\x02\x02\xA0\x15\x03\x02\x02\x02\xA1\xA2\x07#\x02\x02" +
		"\xA2\xA3\x07]\x02\x02\xA3\xA7\x03\x02\x02\x02\xA4\xA6\n\x07\x02\x02\xA5" +
		"\xA4\x03\x02\x02\x02\xA6\xA9\x03\x02\x02\x02\xA7\xA5\x03\x02\x02\x02\xA7" +
		"\xA8\x03\x02\x02\x02\xA8\xAA\x03\x02\x02\x02\xA9\xA7\x03\x02\x02\x02\xAA" +
		"\xAB\x07_\x02\x02\xAB\xAD\x07*\x02\x02\xAC\xAE\n\b\x02\x02\xAD\xAC\x03" +
		"\x02\x02\x02\xAE\xAF\x03\x02\x02\x02\xAF\xAD\x03\x02\x02\x02\xAF\xB0\x03" +
		"\x02\x02\x02\xB0\xB1\x03\x02\x02\x02\xB1\xB2\x07+\x02\x02\xB2\x17\x03" +
		"\x02\x02\x02\xB3\xB7\x07]\x02\x02\xB4\xB6\n\x07\x02\x02\xB5\xB4\x03\x02" +
		"\x02\x02\xB6\xB9\x03\x02\x02\x02\xB7\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02" +
		"\x02\x02\xB8\xBA\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xBA\xBB\x07_" +
		"\x02\x02\xBB\xBD\x07*\x02\x02\xBC\xBE\n\b\x02\x02\xBD\xBC\x03\x02\x02" +
		"\x02\xBE\xBF\x03\x02\x02\x02\xBF\xBD\x03\x02\x02\x02\xBF\xC0\x03\x02\x02" +
		"\x02\xC0\xC1\x03\x02\x02\x02\xC1\xC2\x07+\x02\x02\xC2\x19\x03\x02\x02" +
		"\x02\xC3\xC5\x07b\x02\x02\xC4\xC6\n\x06\x02\x02\xC5\xC4\x03\x02\x02\x02" +
		"\xC6\xC7\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC7\xC8\x03\x02\x02\x02" +
		"\xC8\xC9\x03\x02\x02\x02\xC9\xCA\x07b\x02\x02\xCA\x1B\x03\x02\x02\x02" +
		"\xCB\xCC\x07,\x02\x02\xCC\xCD\x07,\x02\x02\xCD\xCE\x07,\x02\x02\xCE\xD0" +
		"\x03\x02\x02\x02\xCF\xD1\n\t\x02\x02\xD0\xCF\x03\x02\x02\x02\xD1\xD2\x03" +
		"\x02\x02\x02\xD2\xD0\x03\x02\x02\x02\xD2\xD3\x03\x02\x02\x02\xD3\xD4\x03" +
		"\x02\x02\x02\xD4\xD5\x07,\x02\x02\xD5\xD6\x07,\x02\x02\xD6\xE4\x07,\x02" +
		"\x02\xD7\xD8\x07a\x02\x02\xD8\xD9\x07a\x02\x02\xD9\xDA\x07a\x02\x02\xDA" +
		"\xDC\x03\x02\x02\x02\xDB\xDD\n\n\x02\x02\xDC\xDB\x03\x02\x02\x02\xDD\xDE" +
		"\x03\x02\x02\x02\xDE\xDC\x03\x02\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xE0" +
		"\x03\x02\x02\x02\xE0\xE1\x07a\x02\x02\xE1\xE2\x07a\x02\x02\xE2\xE4\x07" +
		"a\x02\x02\xE3\xCB\x03\x02\x02\x02\xE3\xD7\x03\x02\x02\x02\xE4\x1D\x03" +
		"\x02\x02\x02\xE5\xE6\x07,\x02\x02\xE6\xE7\x07,\x02\x02\xE7\xEB\x03\x02" +
		"\x02\x02\xE8\xEC\n\t\x02\x02\xE9\xEA\x07,\x02\x02\xEA\xEC\n\v\x02\x02" +
		"\xEB\xE8\x03\x02\x02\x02\xEB\xE9\x03\x02\x02\x02\xEC\xED\x03\x02\x02\x02" +
		"\xED\xEB\x03\x02\x02\x02\xED\xEE\x03\x02\x02\x02\xEE\xEF\x03\x02\x02\x02" +
		"\xEF\xF0\x07,\x02\x02\xF0\xFE\x07,\x02\x02\xF1\xF2\x07a\x02\x02\xF2\xF3" +
		"\x07a\x02\x02\xF3\xF7\x03\x02\x02\x02\xF4\xF8\n\n\x02\x02\xF5\xF6\x07" +
		"a\x02\x02\xF6\xF8\n\f\x02\x02\xF7\xF4\x03\x02\x02\x02\xF7\xF5\x03\x02" +
		"\x02\x02\xF8\xF9\x03\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xF9\xFA\x03\x02" +
		"\x02\x02\xFA\xFB\x03\x02\x02\x02\xFB\xFC\x07a\x02\x02\xFC\xFE\x07a\x02" +
		"\x02\xFD\xE5\x03\x02\x02\x02\xFD\xF1\x03\x02\x02\x02\xFE\x1F\x03\x02\x02" +
		"\x02\xFF\u0101\x07,\x02\x02\u0100\u0102\n\t\x02\x02\u0101\u0100\x03\x02" +
		"\x02\x02\u0102\u0103\x03\x02\x02\x02\u0103\u0101\x03\x02\x02\x02\u0103" +
		"\u0104\x03\x02\x02\x02\u0104\u0105\x03\x02\x02\x02\u0105\u010E\x07,\x02" +
		"\x02\u0106\u0108\x07a\x02\x02\u0107\u0109\n\n\x02\x02\u0108\u0107\x03" +
		"\x02\x02\x02\u0109\u010A\x03\x02\x02\x02\u010A\u0108\x03\x02\x02\x02\u010A" +
		"\u010B\x03\x02\x02\x02\u010B\u010C\x03\x02\x02\x02\u010C\u010E\x07a\x02" +
		"\x02\u010D\xFF\x03\x02\x02\x02\u010D\u0106\x03\x02\x02\x02\u010E!\x03" +
		"\x02\x02\x02\u010F\u0110\x07\x80\x02\x02\u0110\u0111\x07\x80\x02\x02\u0111" +
		"\u0113\x03\x02\x02\x02\u0112\u0114\n\r\x02\x02\u0113\u0112\x03\x02\x02" +
		"\x02\u0114\u0115\x03\x02\x02\x02\u0115\u0113\x03\x02\x02\x02\u0115\u0116" +
		"\x03\x02\x02\x02\u0116\u0117\x03\x02\x02\x02\u0117\u0118\x07\x80\x02\x02" +
		"\u0118\u0119\x07\x80\x02\x02\u0119#\x03\x02\x02\x02\u011A\u011E\x07>\x02" +
		"\x02\u011B\u011D\n\x0E\x02\x02\u011C\u011B\x03\x02\x02\x02\u011D\u0120" +
		"\x03\x02\x02\x02\u011E\u011C\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02" +
		"\u011F\u0121\x03\x02\x02\x02\u0120\u011E\x03\x02\x02\x02\u0121\u0122\x07" +
		"@\x02\x02\u0122%\x03\x02\x02\x02\u0123\u0124\x07^\x02\x02\u0124\u0125" +
		"\v\x02\x02\x02\u0125\'\x03\x02\x02\x02\u0126\u0127\x07>\x02\x02\u0127" +
		"\u0128\x07#\x02\x02\u0128\u0129\x07/\x02\x02\u0129\u012A\x07/\x02\x02" +
		"\u012A\u012E\x03\x02\x02\x02\u012B\u012D\v\x02\x02\x02\u012C\u012B\x03" +
		"\x02\x02\x02\u012D\u0130\x03\x02\x02\x02\u012E\u012F\x03\x02\x02\x02\u012E" +
		"\u012C\x03\x02\x02\x02\u012F\u0131\x03\x02\x02\x02\u0130\u012E\x03\x02" +
		"\x02\x02\u0131\u0132\x07/\x02\x02\u0132\u0133\x07/\x02\x02\u0133\u0134" +
		"\x07@\x02\x02\u0134)\x03\x02\x02\x02\u0135\u0137\n\x02\x02\x02\u0136\u0135" +
		"\x03\x02\x02\x02\u0137\u0138\x03\x02\x02\x02\u0138\u0136\x03\x02\x02\x02" +
		"\u0138\u0139\x03\x02\x02\x02\u0139+\x03\x02\x02\x02\u013A\u013C\x07\x0F" +
		"\x02\x02\u013B\u013A\x03\x02\x02\x02\u013B\u013C\x03\x02\x02\x02\u013C" +
		"\u013D\x03\x02\x02\x02\u013D\u013E\x07\f\x02\x02\u013E-\x03\x02\x02\x02" +
		"\u013F\u0141\t\x03\x02\x02\u0140\u013F\x03\x02\x02\x02\u0141\u0142\x03" +
		"\x02\x02\x02\u0142\u0140\x03\x02\x02\x02\u0142\u0143\x03\x02\x02\x02\u0143" +
		"\u0144\x03\x02\x02\x02\u0144\u0145\b\x17\x03\x02\u0145/\x03\x02\x02\x02" +
		"\u0146\u0147\x07b\x02\x02\u0147\u0148\x07b\x02\x02\u0148\u0149\x07b\x02" +
		"\x02\u0149\u014B\x03\x02\x02\x02\u014A\u014C\x05,\x16\x02\u014B\u014A" +
		"\x03\x02\x02\x02\u014B\u014C\x03\x02\x02\x02\u014C\u014D\x03\x02\x02\x02" +
		"\u014D\u014E\b\x18\x04\x02\u014E1\x03\x02\x02\x02\u014F\u0151\n\x0F\x02" +
		"\x02\u0150\u014F\x03\x02\x02\x02\u0151\u0152\x03\x02\x02\x02\u0152\u0153" +
		"\x03\x02\x02\x02\u0152\u0150\x03\x02\x02\x02\u0153\u0156\x03\x02\x02\x02" +
		"\u0154\u0157\x05,\x16\x02\u0155\u0157\x07\x02\x02\x03\u0156\u0154\x03" +
		"\x02\x02\x02\u0156\u0155\x03\x02\x02\x02\u01573\x03\x02\x02\x02/\x02\x03" +
		"69AGLX]dimsx|\x83\x88\x8C\x91\x9A\xA7\xAF\xB7\xBF\xC7\xD2\xDE\xE3\xEB" +
		"\xED\xF7\xF9\xFD\u0103\u010A\u010D\u0115\u011E\u012E\u0138\u013B\u0142" +
		"\u014B\u0152\u0156\x05\x07\x03\x02\x02\x03\x02\x06\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!MarkdownMini.__ATN) {
			MarkdownMini.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(MarkdownMini._serializedATN));
		}

		return MarkdownMini.__ATN;
	}

}

