{
  "languages": [
    {
      "name": "javascript",
      "aliases": ["js"],
      "patterns": [
        { "type": "comment", "regex": "//.*?$|/\\*[\\s\\S]*?\\*/" },
        { "type": "string", "regex": "\\`(?:\\\\.|[^\\`\\\\])*\\`|\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'" },
        { "type": "number", "regex": "\\b\\d+(?:\\.\\d+)?\\b" },
        { "type": "keyword", "regex": "\\b(?:break|case|catch|class|const|continue|debugger|default|delete|do|else|export|extends|finally|for|function|if|import|in|instanceof|let|new|return|super|switch|this|throw|try|typeof|var|void|while|with|yield|enum|await|implements|package|protected|static|interface|private|public)\\b" },
        { "type": "identifier", "regex": "[A-Za-z_$][A-Za-z0-9_$]*" },
        { "type": "punctuation", "regex": "[{}()[\\].,;:+\\-*/%&|^!?=<>]" },
        { "type": "whitespace", "regex": "\\s+" }
      ]
    },
    {
      "name": "python",
      "aliases": ["py"],
      "patterns": [
        { "type": "comment", "regex": "#.*$" },
        { "type": "string", "regex": "\"\"\"[\\s\\S]*?\"\"\"|'''[\\s\\S]*?'''|\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'" },
        { "type": "number", "regex": "\\b\\d+(?:\\.\\d+)?\\b" },
        { "type": "keyword", "regex": "\\b(?:def|return|if|elif|else|for|while|import|from|as|class|try|except|finally|with|yield|lambda|pass|break|continue|and|or|not|in|is|None|True|False)\\b" },
        { "type": "identifier", "regex": "[A-Za-z_][A-Za-z0-9_]*" },
        { "type": "punctuation", "regex": "[{}()[\\].,;:+\\-*/%&|^!?=<>]" },
        { "type": "whitespace", "regex": "\\s+" }
      ]
    },
    {
      "name": "json",
      "patterns": [
        { "type": "whitespace", "regex": "\\s+" },
  { "type": "punctuation", "regex": "[{}\\[\\]:,]" },
        { "type": "number", "regex": "-?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b" },
        { "type": "string", "regex": "\"(?:\\\\.|[^\"\\\\])*\"" },
        { "type": "keyword", "regex": "\\b(?:true|false|null)\\b" }
      ]
    },
    {
      "name": "bash",
      "aliases": ["sh"],
      "patterns": [
        { "type": "comment", "regex": "#.*$" },
        { "type": "string", "regex": "'(?:[^']*)'|\"(?:\\\\.|[^\"\\\\])*\"" },
        { "type": "keyword", "regex": "\\b(?:if|then|else|elif|fi|for|while|in|do|done|case|esac|function|select|time)\\b" },
        { "type": "punctuation", "regex": "[{}()[\\].,;:+\\-*/%&|^!?=<>]" },
        { "type": "identifier", "regex": "[A-Za-z_][A-Za-z0-9_]*" },
        { "type": "number", "regex": "\\b\\d+\\b" },
        { "type": "whitespace", "regex": "\\s+" }
      ]
    },
    {
      "name": "markdown",
      "aliases": ["md"],
      "patterns": [
        { "type": "comment", "regex": "<!--(?:.|\n)*?-->" },
        { "type": "keyword", "regex": "^#+.*$" },
        { "type": "string", "regex": "`[^`]+`" },
        { "type": "number", "regex": "\\b\\d+(?:\\.\\d+)?\\b" },
        { "type": "identifier", "regex": "[A-Za-z_][A-Za-z0-9_-]*" },
        { "type": "punctuation", "regex": "[>*_\\-`#]" },
        { "type": "whitespace", "regex": "\\s+" }
      ]
    },
    {
      "name": "typescript",
      "aliases": ["ts"],
      "patterns": [
        { "type": "comment", "regex": "//.*?$|/\\*[\\s\\S]*?\\*/" },
        { "type": "string", "regex": "\\`(?:\\\\.|[^\\`\\\\])*\\`|\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'" },
        { "type": "number", "regex": "\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|0x[0-9a-fA-F]+\\b|0b[01]+\\b|0o[0-7]+\\b" },
        { "type": "keyword", "regex": "\\b(?:abstract|any|as|asserts|async|await|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|infer|instanceof|interface|is|keyof|let|module|namespace|never|new|null|number|object|of|override|private|protected|public|readonly|return|set|static|string|super|switch|symbol|this|throw|true|try|type|typeof|undefined|union|unknown|var|void|while|with|yield)\\b" },
        { "type": "type", "regex": ":[^;,)}\\r\\n]+" },
        { "type": "decorator", "regex": "@[A-Za-z_$][A-Za-z0-9_$]*(?:\\([^)]*\\))?" },
        { "type": "identifier", "regex": "[A-Za-z_$][A-Za-z0-9_$]*" },
        { "type": "punctuation", "regex": "[{}()[\\].,;:+\\-*/%&|^!?=<>]|\\?\\.?|\\?\\?=?|\\|\\|=?|&&=?|=>|\\.\\.\\.|\\.\\.\\.?" },
        { "type": "whitespace", "regex": "\\s+" }
      ]
    },
    {
      "name": "css",
      "patterns": [
        { "type": "comment", "regex": "/\\*[\\s\\S]*?\\*/" },
        { "type": "string", "regex": "\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'" },
        { "type": "number", "regex": "\\b\\d+(?:\\.\\d+)?(?:px|em|rem|ex|ch|vw|vh|vmin|vmax|%|cm|mm|in|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx|fr)?\\b" },
        { "type": "keyword", "regex": "\\b(?:important|inherit|initial|unset|revert|auto|none|normal|all)\\b" },
        { "type": "property", "regex": "\\b(?:color|background|background-color|background-image|background-position|background-repeat|background-size|background-attachment|border|border-color|border-style|border-width|border-radius|border-top|border-right|border-bottom|border-left|margin|margin-top|margin-right|margin-bottom|margin-left|padding|padding-top|padding-right|padding-bottom|padding-left|width|height|min-width|min-height|max-width|max-height|display|position|top|right|bottom|left|float|clear|overflow|overflow-x|overflow-y|visibility|opacity|z-index|font|font-family|font-size|font-weight|font-style|font-variant|line-height|text-align|text-decoration|text-transform|text-indent|letter-spacing|word-spacing|white-space|vertical-align|list-style|list-style-type|list-style-position|list-style-image|table-layout|border-collapse|border-spacing|caption-side|empty-cells|cursor|outline|outline-color|outline-style|outline-width|content|quotes|counter-reset|counter-increment|box-shadow|text-shadow|transform|transform-origin|transition|transition-property|transition-duration|transition-timing-function|transition-delay|animation|animation-name|animation-duration|animation-timing-function|animation-delay|animation-iteration-count|animation-direction|animation-fill-mode|animation-play-state|flex|flex-direction|flex-wrap|flex-flow|justify-content|align-items|align-content|order|flex-grow|flex-shrink|flex-basis|align-self|grid|grid-template|grid-template-areas|grid-template-rows|grid-template-columns|grid-area|grid-row|grid-column|grid-gap|grid-row-gap|grid-column-gap)\\s*:" },
        { "type": "color", "regex": "#[0-9A-Fa-f]{3,8}|\\b(?:aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|transparent)\\b" },
        { "type": "function", "regex": "\\b(?:url|calc|var|rgb|rgba|hsl|hsla|linear-gradient|radial-gradient|repeat-linear-gradient|repeat-radial-gradient|matrix|translate|scale|rotate|skew|translateX|translateY|scaleX|scaleY|rotateX|rotateY|rotateZ|translate3d|scale3d|rotate3d|perspective|blur|brightness|contrast|drop-shadow|grayscale|hue-rotate|invert|opacity|saturate|sepia)\\s*\\(" },
        { "type": "selector", "regex": "\\.[a-zA-Z_-][a-zA-Z0-9_-]*|#[a-zA-Z_-][a-zA-Z0-9_-]*|::[a-zA-Z_-][a-zA-Z0-9_-]*|:[a-zA-Z_-][a-zA-Z0-9_-]*(?:\\([^)]*\\))?" },
        { "type": "at-rule", "regex": "@[a-zA-Z-]+" },
        { "type": "identifier", "regex": "[a-zA-Z_-][a-zA-Z0-9_-]*" },
        { "type": "punctuation", "regex": "[{}();,>+~*[\\]=\"']|!important" },
        { "type": "whitespace", "regex": "\\s+" }
      ]
    }
  ]
}
