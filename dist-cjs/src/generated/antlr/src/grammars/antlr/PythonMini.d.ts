import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class PythonMini extends Lexer {
    static readonly KEYWORD = 1;
    static readonly BOOLEAN = 2;
    static readonly NONE = 3;
    static readonly COMMENT = 4;
    static readonly F_STRING = 5;
    static readonly RAW_STRING = 6;
    static readonly TRIPLE_STRING = 7;
    static readonly STRING_DOUBLE = 8;
    static readonly STRING_SINGLE = 9;
    static readonly NUMBER = 10;
    static readonly HEX_NUMBER = 11;
    static readonly BIN_NUMBER = 12;
    static readonly OCT_NUMBER = 13;
    static readonly FLOAT_NUMBER = 14;
    static readonly INT_NUMBER = 15;
    static readonly OPERATOR = 16;
    static readonly PUNCT = 17;
    static readonly DECORATOR = 18;
    static readonly IDENTIFIER = 19;
    static readonly NEWLINE = 20;
    static readonly WS = 21;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
