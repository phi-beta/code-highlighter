import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class BashMini extends Lexer {
    static readonly KEYWORD = 1;
    static readonly COMMENT = 2;
    static readonly ARITHMETIC_EXPANSION = 3;
    static readonly COMMAND_SUBSTITUTION = 4;
    static readonly COMMAND_SUBSTITUTION_BACKTICK = 5;
    static readonly PARAMETER_EXPANSION = 6;
    static readonly STRING_DOUBLE = 7;
    static readonly STRING_SINGLE = 8;
    static readonly VAR = 9;
    static readonly VAR_POSITIONAL = 10;
    static readonly VAR_SPECIAL = 11;
    static readonly NUMBER = 12;
    static readonly TEST_OP = 13;
    static readonly IDENTIFIER = 14;
    static readonly REDIRECT = 15;
    static readonly PIPE = 16;
    static readonly LOGICAL = 17;
    static readonly PUNCT = 18;
    static readonly WS = 19;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
