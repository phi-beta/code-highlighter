import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class TypeScriptMini extends Lexer {
    static readonly DECORATOR = 1;
    static readonly COMMENT_SINGLE = 2;
    static readonly COMMENT_MULTI = 3;
    static readonly KEYWORD = 4;
    static readonly STRING_TEMPLATE = 5;
    static readonly STRING_DOUBLE = 6;
    static readonly STRING_SINGLE = 7;
    static readonly NUMBER = 8;
    static readonly REGEX = 9;
    static readonly TYPE_ANNOTATION = 10;
    static readonly GENERIC_TYPE = 11;
    static readonly OPERATOR_TS = 12;
    static readonly OPERATOR = 13;
    static readonly PUNCTUATION = 14;
    static readonly IDENTIFIER = 15;
    static readonly NEWLINE = 16;
    static readonly WHITESPACE = 17;
    static readonly OTHER = 18;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
