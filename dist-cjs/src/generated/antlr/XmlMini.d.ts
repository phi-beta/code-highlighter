import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class XmlMini extends Lexer {
    static readonly LPAREN = 1;
    static readonly RPAREN = 2;
    static readonly LBRACE = 3;
    static readonly RBRACE = 4;
    static readonly LBRACKET = 5;
    static readonly RBRACKET = 6;
    static readonly LT = 7;
    static readonly GT = 8;
    static readonly SLASH = 9;
    static readonly EQUALS = 10;
    static readonly QUESTION = 11;
    static readonly XML_COMMENT = 12;
    static readonly PROCESSING_INSTRUCTION = 13;
    static readonly XML_DECLARATION = 14;
    static readonly CDATA_SECTION = 15;
    static readonly DOCTYPE = 16;
    static readonly XML_ENTITY = 17;
    static readonly DOUBLE_QUOTED_STRING = 18;
    static readonly SINGLE_QUOTED_STRING = 19;
    static readonly NUMBER = 20;
    static readonly CLOSING_TAG = 21;
    static readonly ATTRIBUTE_NAME = 22;
    static readonly NAMESPACE_PREFIX = 23;
    static readonly TEXT_CONTENT = 24;
    static readonly NEWLINE = 25;
    static readonly WHITESPACE = 26;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
